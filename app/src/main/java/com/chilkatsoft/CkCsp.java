/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.chilkatsoft;

public class CkCsp {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected CkCsp(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CkCsp obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        chilkatJNI.delete_CkCsp(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CkCsp() {
    this(chilkatJNI.new_CkCsp(), true);
  }

  public void LastErrorXml(CkString str) {
    chilkatJNI.CkCsp_LastErrorXml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void LastErrorHtml(CkString str) {
    chilkatJNI.CkCsp_LastErrorHtml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void LastErrorText(CkString str) {
    chilkatJNI.CkCsp_LastErrorText(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void get_DebugLogFilePath(CkString str) {
    chilkatJNI.CkCsp_get_DebugLogFilePath(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String debugLogFilePath() {
    return chilkatJNI.CkCsp_debugLogFilePath(swigCPtr, this);
  }

  public void put_DebugLogFilePath(String newVal) {
    chilkatJNI.CkCsp_put_DebugLogFilePath(swigCPtr, this, newVal);
  }

  public void get_EncryptAlgorithm(CkString str) {
    chilkatJNI.CkCsp_get_EncryptAlgorithm(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String encryptAlgorithm() {
    return chilkatJNI.CkCsp_encryptAlgorithm(swigCPtr, this);
  }

  public int get_EncryptAlgorithmID() {
    return chilkatJNI.CkCsp_get_EncryptAlgorithmID(swigCPtr, this);
  }

  public int get_EncryptNumBits() {
    return chilkatJNI.CkCsp_get_EncryptNumBits(swigCPtr, this);
  }

  public void get_HashAlgorithm(CkString str) {
    chilkatJNI.CkCsp_get_HashAlgorithm(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String hashAlgorithm() {
    return chilkatJNI.CkCsp_hashAlgorithm(swigCPtr, this);
  }

  public int get_HashAlgorithmID() {
    return chilkatJNI.CkCsp_get_HashAlgorithmID(swigCPtr, this);
  }

  public int get_HashNumBits() {
    return chilkatJNI.CkCsp_get_HashNumBits(swigCPtr, this);
  }

  public void get_KeyContainerName(CkString str) {
    chilkatJNI.CkCsp_get_KeyContainerName(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String keyContainerName() {
    return chilkatJNI.CkCsp_keyContainerName(swigCPtr, this);
  }

  public void put_KeyContainerName(String newVal) {
    chilkatJNI.CkCsp_put_KeyContainerName(swigCPtr, this, newVal);
  }

  public void get_LastErrorHtml(CkString str) {
    chilkatJNI.CkCsp_get_LastErrorHtml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorHtml() {
    return chilkatJNI.CkCsp_lastErrorHtml(swigCPtr, this);
  }

  public void get_LastErrorText(CkString str) {
    chilkatJNI.CkCsp_get_LastErrorText(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorText() {
    return chilkatJNI.CkCsp_lastErrorText(swigCPtr, this);
  }

  public void get_LastErrorXml(CkString str) {
    chilkatJNI.CkCsp_get_LastErrorXml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorXml() {
    return chilkatJNI.CkCsp_lastErrorXml(swigCPtr, this);
  }

  public boolean get_LastMethodSuccess() {
    return chilkatJNI.CkCsp_get_LastMethodSuccess(swigCPtr, this);
  }

  public void put_LastMethodSuccess(boolean newVal) {
    chilkatJNI.CkCsp_put_LastMethodSuccess(swigCPtr, this, newVal);
  }

  public boolean get_MachineKeyset() {
    return chilkatJNI.CkCsp_get_MachineKeyset(swigCPtr, this);
  }

  public void put_MachineKeyset(boolean newVal) {
    chilkatJNI.CkCsp_put_MachineKeyset(swigCPtr, this, newVal);
  }

  public int get_NumEncryptAlgorithms() {
    return chilkatJNI.CkCsp_get_NumEncryptAlgorithms(swigCPtr, this);
  }

  public int get_NumHashAlgorithms() {
    return chilkatJNI.CkCsp_get_NumHashAlgorithms(swigCPtr, this);
  }

  public int get_NumKeyContainers() {
    return chilkatJNI.CkCsp_get_NumKeyContainers(swigCPtr, this);
  }

  public int get_NumKeyExchangeAlgorithms() {
    return chilkatJNI.CkCsp_get_NumKeyExchangeAlgorithms(swigCPtr, this);
  }

  public int get_NumSignatureAlgorithms() {
    return chilkatJNI.CkCsp_get_NumSignatureAlgorithms(swigCPtr, this);
  }

  public void get_ProviderName(CkString str) {
    chilkatJNI.CkCsp_get_ProviderName(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String providerName() {
    return chilkatJNI.CkCsp_providerName(swigCPtr, this);
  }

  public void put_ProviderName(String newVal) {
    chilkatJNI.CkCsp_put_ProviderName(swigCPtr, this, newVal);
  }

  public int get_ProviderType() {
    return chilkatJNI.CkCsp_get_ProviderType(swigCPtr, this);
  }

  public void get_UncommonOptions(CkString str) {
    chilkatJNI.CkCsp_get_UncommonOptions(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String uncommonOptions() {
    return chilkatJNI.CkCsp_uncommonOptions(swigCPtr, this);
  }

  public void put_UncommonOptions(String newVal) {
    chilkatJNI.CkCsp_put_UncommonOptions(swigCPtr, this, newVal);
  }

  public boolean get_VerboseLogging() {
    return chilkatJNI.CkCsp_get_VerboseLogging(swigCPtr, this);
  }

  public void put_VerboseLogging(boolean newVal) {
    chilkatJNI.CkCsp_put_VerboseLogging(swigCPtr, this, newVal);
  }

  public void get_Version(CkString str) {
    chilkatJNI.CkCsp_get_Version(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String version() {
    return chilkatJNI.CkCsp_version(swigCPtr, this);
  }

  public CkStringArray GetKeyContainerNames() {
    long cPtr = chilkatJNI.CkCsp_GetKeyContainerNames(swigCPtr, this);
    return (cPtr == 0) ? null : new CkStringArray(cPtr, true);
  }

  public boolean GetProviders(CkStringTable providerNames) {
    return chilkatJNI.CkCsp_GetProviders(swigCPtr, this, CkStringTable.getCPtr(providerNames), providerNames);
  }

  public boolean HasEncryptAlgorithm(String name, int numBits) {
    return chilkatJNI.CkCsp_HasEncryptAlgorithm(swigCPtr, this, name, numBits);
  }

  public boolean HasHashAlgorithm(String name, int numBits) {
    return chilkatJNI.CkCsp_HasHashAlgorithm(swigCPtr, this, name, numBits);
  }

  public boolean Initialize() {
    return chilkatJNI.CkCsp_Initialize(swigCPtr, this);
  }

  public boolean NthEncryptionAlgorithm(int index, CkString outName) {
    return chilkatJNI.CkCsp_NthEncryptionAlgorithm(swigCPtr, this, index, CkString.getCPtr(outName), outName);
  }

  public String nthEncryptionAlgorithm(int index) {
    return chilkatJNI.CkCsp_nthEncryptionAlgorithm(swigCPtr, this, index);
  }

  public int NthEncryptionNumBits(int index) {
    return chilkatJNI.CkCsp_NthEncryptionNumBits(swigCPtr, this, index);
  }

  public boolean NthHashAlgorithmName(int index, CkString outName) {
    return chilkatJNI.CkCsp_NthHashAlgorithmName(swigCPtr, this, index, CkString.getCPtr(outName), outName);
  }

  public String nthHashAlgorithmName(int index) {
    return chilkatJNI.CkCsp_nthHashAlgorithmName(swigCPtr, this, index);
  }

  public int NthHashNumBits(int index) {
    return chilkatJNI.CkCsp_NthHashNumBits(swigCPtr, this, index);
  }

  public boolean NthKeyContainerName(int index, CkString outName) {
    return chilkatJNI.CkCsp_NthKeyContainerName(swigCPtr, this, index, CkString.getCPtr(outName), outName);
  }

  public String nthKeyContainerName(int index) {
    return chilkatJNI.CkCsp_nthKeyContainerName(swigCPtr, this, index);
  }

  public boolean NthKeyExchangeAlgorithm(int index, CkString outName) {
    return chilkatJNI.CkCsp_NthKeyExchangeAlgorithm(swigCPtr, this, index, CkString.getCPtr(outName), outName);
  }

  public String nthKeyExchangeAlgorithm(int index) {
    return chilkatJNI.CkCsp_nthKeyExchangeAlgorithm(swigCPtr, this, index);
  }

  public int NthKeyExchangeNumBits(int index) {
    return chilkatJNI.CkCsp_NthKeyExchangeNumBits(swigCPtr, this, index);
  }

  public boolean NthSignatureAlgorithm(int index, CkString outName) {
    return chilkatJNI.CkCsp_NthSignatureAlgorithm(swigCPtr, this, index, CkString.getCPtr(outName), outName);
  }

  public String nthSignatureAlgorithm(int index) {
    return chilkatJNI.CkCsp_nthSignatureAlgorithm(swigCPtr, this, index);
  }

  public int NthSignatureNumBits(int index) {
    return chilkatJNI.CkCsp_NthSignatureNumBits(swigCPtr, this, index);
  }

  public boolean SaveLastError(String path) {
    return chilkatJNI.CkCsp_SaveLastError(swigCPtr, this, path);
  }

  public int SetEncryptAlgorithm(String name) {
    return chilkatJNI.CkCsp_SetEncryptAlgorithm(swigCPtr, this, name);
  }

  public int SetHashAlgorithm(String name) {
    return chilkatJNI.CkCsp_SetHashAlgorithm(swigCPtr, this, name);
  }

}
